// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum MealTime {
  BREAKFAST
  LUNCH
  DINNER
  DESSERT
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

  recipes        Recipe[]         @relation("createdByUser")
  comments       Comment[]
  favoriteRecipe FavoriteRecipe[]
}

model Recipe {
  id          String   @id @default(uuid())
  name        String
  instruction String[]
  ingredients String[]
  mealTime    MealTime
  //add image to display based on the mealTime
  cookTime    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User   @relation("createdByUser", fields: [userId], references: [id], onDelete: Cascade)
  userId String

  comments        Comment[]
  favoriteRecipes FavoriteRecipe[]
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  Recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String
}

//user and recipe connection. User can fave many recipes and recipes can have many user who favorite it
model FavoriteRecipe {
  id     String @id @default(uuid())
  users  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  recipes  Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String

  @@unique([userId, recipeId])
}
